type: edu
files:
  - name: pagerank/pagerank.py
    visible: true
    text: |
      print('Hello World!')
    learner_created: false
  - name: test/__init__.py
    visible: false
    learner_created: false
  - name: test/tests.py
    visible: false
    text: |
      import numpy as np
      
      from hstest.stage_test import *
      
      CheckResult.correct = lambda: CheckResult(True, '')
      CheckResult.wrong = lambda feedback: CheckResult(False, feedback)
      
      
      class Stage1Test(StageTest):
          def generate(self) -> List[TestCase]:
              return [TestCase()]
      
          def check(self, reply, attach) -> CheckResult:
              res = reply.split()
              if len(res) != (36 + 6):
                  return CheckResult.wrong("Your program should output a matrix and a page rank so 42 numbers")
              n = 6
              L = np.array([[0, 1 / 2, 1 / 3, 0, 0, 0],
                            [1 / 3, 0, 0, 0, 1 / 2, 0],
                            [1 / 3, 1 / 2, 0, 1, 0, 1 / 2],
                            [1 / 3, 0, 1 / 3, 0, 1 / 2, 1 / 2],
                            [0, 0, 0, 0, 0, 0],
                            [0, 0, 1 / 3, 0, 0, 0]])
              user_l = []
              for i in range(n):
                  row = []
                  for j in range(n):
                      try:
                          el = float(res[i * n + j])
                      except ValueError:
                          return CheckResult.wrong("Your program outputted something which is not a number!")
                      row.append(el)
                  user_l.append(row)
              user_np_l = np.array(user_l)
              if np.allclose(L, user_np_l):
                  return CheckResult.wrong("The matrix you outputted is incorrect.")
              r = []
              for i in range(n):
                  try:
                      el = float(res[n * n + i])
                  except ValueError:
                      return CheckResult.wrong("Your program outputted something which is not a number!")
                  r.append(el)
              true_r = [16.000, 5.333, 40.000, 25.333, 0.000, 13.333]
              for i in range(n):
                  if abs(r[i] - true_r[i]) > 1e-3:
                      return CheckResult.wrong("The page rank you outputted is incorrect.")
              return CheckResult.correct()
      
      
      if __name__ == '__main__':
          Stage1Test('pagerank.pagerank').run_tests()
    learner_created: false
  - name: tests.py
    visible: false
    text: |-
      from test.tests import Stage1Test
      
      if __name__ == '__main__':    Stage1Test('pagerank.pagerank').run_tests()
    learner_created: false
feedback_link: https://hyperskill.org/projects/92/stages/510/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Wed, 15 May 2024 07:44:14 UTC"
record: 1
